packagist.org, lista pakietów dostępnych przez composer, główne repozytorium Composera
// laravel/laravel
// laravel new my-blog
composer require phpspec/phpspec
nazwa vendora / nazwa pakietu
composer install
instaluje wszystko, co jest wyspecyfikowane w composer.json (cat composer.json)
np. dla kogoś, komu przekopiowaliśmy projekt
vendor - zawiera wszystkie pakiety ściągnięte przez composer
vendor\bin zawiera pliki wykonywalne
autoloader umożliwia import klas PHP zgodnie z prostą konwencją
(zamiast ciągłego używania require)
tworzymy projekt zamiast require
(w innym folderze niż ten poprzedni z phpspec)
composer create-project laravel/laravel learning-laravel-5 dev-develop
(dev-develop gałąź rozwojowa projektu; teraz jest już pełna wersja,
możemy korzystać z domyślnej gałęzi produkcyjnej)
z poziomu learning-laravel-5
php -S localhost:8888 -t public
document root na public z projektu laravel
uruchamiamy serwer (może się pojawić problem z brakiem mcrypt)


laracasts -> composer
laracasts -> homestead
homestead - vagrant box przygotowany przez laravel,
zestaw aplikacji i bibliotek dla developera na wirtualnej maszynie

Instalacja i konfiguracja VirtualBox (najlepiej od razy sudo su):
http://www.if-not-true-then-false.com/2010/install-virtualbox-with-yum-on-fedora-centos-red-hat-rhel/comment-page-1/
http://www.if-not-true-then-false.com/2010/install-virtualbox-guest-additions-on-fedora-centos-red-hat-rhel/comment-page-2/
- dodajemy repo vbox
cd /etc/yum.repos.d/
wget http://download.virtualbox.org/virtualbox/rpm/fedora/virtualbox.repo
- robimy update
- sprawdzamy wersję jądra
rpm -qa kernel |sort -V |tail -n 1
uname -r
- instalacja dodatkowych pakietów (w tym kernel-devel)
dnf install binutils gcc make patch libgomp glibc-headers glibc-devel kernel-headers kernel-devel dkms
- pakiety dla Guest Additions
dnf install gcc kernel-devel kernel-headers dkms make bzip2 perl
- instalacja vbox
dnf install VirtualBox-5.0
- kompilowanie modułu jądra i utworzenie grupy vboxusers
/etc/init.d/vboxdrv setup
## lub ##
service vboxdrv setup
- dodanie użytkownika do grupy vboxusers
usermod -a -G vboxusers gulci
## ściąganie kernel-devel dla wersji jądra, które posiadamy ##
sudo dnf install kernel-devel-$(uname -r)
- możemy uruchomić VirtualBox
VirttualBox

instalacja vagrant
vagrant to wrapper nad vbox i nie tylko, konfiguracja środowiska wirtualnego

vagrant box add laravel/homestead

composer global require "laravel/homestead=~2.0"
executable dla homestead, global - w home dla całego systemu

trzeba dodać homestead do PATH (dla danego użytkownika)
echo "export PATH=$PATH:/home/gulci/.composer/vendor/bin" >> ~/.bashrc

homestead init
tworzymy global configuration file
gedit /home/gulci/.homestead/Homestead.yaml
## lub ##
homestead edit

musimy autoryzować klucze ssh, sekcje authorize i keys
/home/gulci/.ssh/id_rsa - zapisuje identyfikację
/home/gulci/.ssh/id_rsa.pub
nie wpisujemy nazwy pliku ani hasła
po wcześniejszym użyciu git powinno już to być
ssh-keygen -t rsa -C "gulci@homestead"

mapowanie folderu w sekcji folders
mapowanie domeny w sekcji sites, możemy utworzyć swoją
ustalamy tu publiczny folder dla naszej strony

dopisujemy w /etc/hosts
198.162.10.10 gulci.app

ad-hoc:
serve laravel.app /public_path
trzeba potem dodać kolejną domenę do /etc/hosts

sekcja databases i variables

- zmiany w pliku Homestead.yaml nie są aplikowane automatycznie
vagrant reload --provision
- czasami trzeba uzyskać id maszyny
vagrant global-status
vagrant reload --provision id
(vagrant provision id - spotkałem też takę wersję)

bootowanie
homestead up

konsola
homestead ssh

php -v

w przeglądarce
jeśli mamy ustawiony public, inaczej musimy jeszcze dojść po ścieżce
gulci.app

homestead
homestead list

homestead suspend
homestead halt


token github
b256dff78fb9b1d3beb298f6212ba77e3e5869a7

- laravel executable, globalnie
composer global require "laravel/installer=~1.1"
- folder do $PATH dodaliśmy już przy okazji homestead


zmieniamy .env.example na .env
u mnie są oba pliki i w obu mam APP_ENV=local
dzięki temu będę widział listing błędów

tworzymy kontrolej z linii komend
php artisan make:controller PageController
resourceful routing - są przygotowane funkcje w kontrolerze
php artisan make:controller PageController --plain
php artisan help make:controller
